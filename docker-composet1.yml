# SEE https://github.com/htpcBeginner/docker-traefik/blob/master/docker-compose-t1.yml#L719
# https://geek-cookbook.funkypenguin.co.nz/recipes/owntracks/
########################### PRE
# sudo apt-get install apt-transport-https ca-certificates curl software-properties-common
# curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
# sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
# sudo apt-get update
# sudo apt-get install docker-ce
# sudo curl -L https://github.com/docker/compose/releases/download/1.23.2/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
# sudo chmod +x /usr/local/bin/docker-compose
# sudo usermod -aG docker ${USER}
# mkdir ~/docker
# sudo nano ~/docker/.env
# sudo chmod -R 775 ~/docker
# mkdir ~/docker/shared
# mkdir -p ~/docker/traefik/acme
# touch ~/docker/traefik/acme/acme.json
# chmod 600 ~/docker/traefik/acme/acme.json
# nano ~/docker/traefik/traefik.toml
# touch ~/docker/traefik/rules.toml
# nano ~/docker/docker-compose.yml
# docker create network traefik_proxy
# FORWARD PORTS 8 and 443 to Server
# docker-compose -f ~/docker/docker-compose.yml up -d

version: "3.7"

########################### NETWORKS
networks:
  traefik_proxy:
    external:
      name: traefik_proxy
  default:
    driver: bridge
  influxdb:

########################### SERVICES
services:

########################### FRONTENDS

## Traefik - Reverse Proxy
# Create traefik.toml and rules dir and acme dir before running container.
# mkdir -p ${USERDIR}/docker/traefik/acme
# touch ${USERDIR}/docker/traefik/acme/acme.json
# chmod 600 ${USERDIR}/docker/traefik/acme/acme.json
# nano ${USERDIR}/docker/traefik/traefik.toml
# touch ${USERDIR}/docker/traefik/rules.toml
  traefik:
    image: traefik:maroilles
    container_name: traefik
    hostname: traefik
    restart: unless-stopped
    networks:
      - default
      - traefik_proxy
    ports:
      - "80:80"
      - "443:443"
      - "${TRAEFIK_DASHBOARD_PORT}:8080"
    domainname: ${DOMAINNAME}
    dns:
#      - ${PIHOLE_IP}
       - 1.1.1.1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${USERDIR}/docker/traefik:/etc/traefik
      - ${USERDIR}/docker/shared:/shared
    environment:
      CF_API_EMAIL: ${CLOUDFLARE_EMAIL}
      CF_API_KEY: ${CLOUDFLARE_API_KEY}
    labels:
      traefik.enable: "true"
      traefik.backend: traefik
      traefik.protocol: http
      traefik.port: 8080
      traefik.frontend.rule: Host:traefik.${DOMAINNAME}
      traefik.frontend.headers.SSLHost: traefik.${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.headers.SSLForceHost: "true"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
#      traefik.frontend.headers.frameDeny: "true" #customFrameOptionsValue overrides this
      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
#      traefik.frontend.auth.basic.users: '${HTTP_USERNAME}:${HTTP_PASSWORD}'
      traefik.frontend.auth.forward.address: "http://oauth:4181"
      traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
      traefik.frontend.auth.forward.trustForwardHeader: "true"

# OAuth - Forward Authentication
  oauth:
    image: thomseddon/traefik-forward-auth
    container_name: oauth
    hostname: oauth
    restart: always
    networks:
      - default
      - traefik_proxy
    environment:
      PROVIDERS_GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      PROVIDERS_GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      SECRET: ${OAUTH_SECRET}
      COOKIE_DOMAIN: ${DOMAINNAME}
      INSECURE_COOKIE: "false"
      AUTH_HOST: oauth.${DOMAINNAME}
      URL_PATH: /_oauth
      WHITELIST: ${MY_EMAIL},ozpyes@gmail.com
      LOG_LEVEL: info
      LIFETIME: 2592000 # 30 days
    labels:
      traefik.enable: "true"
      traefik.backend: oauth
      traefik.port: 4181
      traefik.frontend.rule: Host:oauth.${DOMAINNAME}
      traefik.frontend.headers.SSLHost: oauth.${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.headers.SSLForceHost: "true"
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.auth.forward.address: "http://oauth:4181"
      traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
      traefik.frontend.auth.forward.trustForwardHeader: "true"

# Portainer - Container Management
  portainer:
    image: portainer/portainer
    container_name: portainer
    hostname: portainer
    restart: unless-stopped
    networks:
      - traefik_proxy
    ports:
      - "${PORTAINER_PORT}:9000"
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${USERDIR}/docker/portainer/data:/data
    environment:
      TZ: ${TZ}
    labels:
      traefik.enable: "true"
      traefik.backend: portainer
      traefik.protocol: http
      traefik.port: 9000
      traefik.frontend.rule: Host:portainer.${DOMAINNAME}
      traefik.frontend.headers.SSLHost: portainer.${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.headers.SSLForceHost: "true"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
      traefik.frontend.auth.forward.address: "http://oauth:4181"
      traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
      traefik.frontend.auth.forward.trustForwardHeader: "true"

  organizr:
    image: organizrtools/organizr-v2
    container_name: organizr
    hostname: organizr
    restart: unless-stopped
    networks:
      - traefik_proxy
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    volumes:
      - ${USERDIR}/docker/organizr:/config
    ports:
      - "${ORGANIZR_PORT}:80"
    labels:
      traefik.enable: "true"
      traefik.backend: organizr
      traefik.protocol: http
      traefik.port: 80
      traefik.frontend.rule: Host:dash.${DOMAINNAME}
      traefik.frontend.headers.SSLHost: dash.${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.headers.SSLForceHost: "true"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
      traefik.frontend.auth.forward.address: "http://oauth:4181"
      traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
      traefik.frontend.auth.forward.trustForwardHeader: "true"

  homer:
    image: b4bz/homer:latest
    container_name: homer
    hostname: homer
    restart: unless-stopped
    networks:
      - traefik_proxy
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
    volumes:
      - $USERDIR/docker/homer/assets/:/www/assets
      - $USERDIR/docker/homer/config.yml:/www/config.yml
    ports:
     - "${HOMER_PORT}:8080"
    labels:
      traefik.enable: "true"
      traefik.backend: homer
      traefik.protocol: http
      traefik.port: 8080 
      traefik.frontend.rule: Host:links.${DOMAINNAME}
      traefik.frontend.headers.SSLHost: links.${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.headers.SSLForceHost: "true"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
      traefik.frontend.auth.forward.address: "http://oauth:4181"
      traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
      traefik.frontend.auth.forward.trustForwardHeader: "true"

## Autoindex - Simple Directory Index
  autoindex:
    image: dceoy/nginx-autoindex
    container_name: autoindex
    hostname: autoindex
    restart: unless-stopped
    networks:
      - traefik_proxy
    ports:
      - "${INDEX_PORT}:80"
    volumes:
      - ${INDEX_DIR}:/var/lib/nginx/html:ro # Location you want to index
    labels:
      traefik.enable: "true"
      traefik.backend: autoindex
      traefik.protocol: http
      traefik.port: 80
      traefik.frontend.rule: "Host:index.${DOMAINNAME}"
      traefik.frontend.headers.SSLHost: index.${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.headers.SSLForceHost: "true"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
      traefik.frontend.auth.forward.address: "http://oauth:4181"
      traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
      traefik.frontend.auth.forward.trustForwardHeader: "true"

############################# DATABASE

############################# DOWNLOADERS

# Deluge Torrent Downloader
  deluge:
    image: linuxserver/deluge
    container_name: deluge
    networks:
      - traefik_proxy
    ports:
      - ${DELUGE_PORT}:${DELUGE_PORT}
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK_SET=002
    volumes:
      - ${USERDIR}/docker/deluge:/config
      - ${DOWNLOAD_DIR}:/downloads
    restart: unless-stopped
    labels:
      traefik.enable: "true"
      traefik.backend: deluge
      traefik.protocol: http
      traefik.port: ${DELUGE_PORT}
      traefik.frontend.rule: Host:deluge.${DOMAINNAME}
      traefik.frontend.headers.SSLHost: deluge.${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.headers.SSLForceHost: "true"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
      traefik.frontend.auth.forward.address: "http://oauth:4181"
      traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
      traefik.frontend.auth.forward.trustForwardHeader: "true"
      
# # SABnzbd - Binary newsgrabber (NZB downloader)
#   sabnzbd:
#     image: "linuxserver/sabnzbd"
#     container_name: "sabnzbd"
#     hostname: sabnzbd
#     restart: unless-stopped
#     volumes:
#       - ${USERDIR}/docker/sabnzbd:/config
#       - ${DOWNLOAD_DIR}:/downloads
#       - ${USERDIR}/docker/shared:/shared
#     ports:
#         - "${SABNZBD_PORT}:8080"
#     environment:
#       - PUID=${PUID}
#       - PGID=${PGID}
#       - TZ=${TZ}
#       - UMASK_SET=002
#     networks:
#       - traefik_proxy
#     labels:      
#       traefik.enable: "true"
#       traefik.backend: sabnzbd
#       traefik.protocol: http
#       traefik.port: 8080
#       traefik.frontend.rule: Host:sabnzbd.${DOMAINNAME}
#       traefik.frontend.headers.SSLHost: sabnzbd.${DOMAINNAME}
#       traefik.docker.network: traefik_proxy
#       traefik.frontend.passHostHeader: "true"
#       traefik.frontend.headers.SSLForceHost: "true"
#       traefik.frontend.headers.SSLRedirect: "true"
#       traefik.frontend.headers.browserXSSFilter: "true"
#       traefik.frontend.headers.contentTypeNosniff: "true"
#       traefik.frontend.headers.forceSTSHeader: "true"
#       traefik.frontend.headers.STSSeconds: 315360000
#       traefik.frontend.headers.STSIncludeSubdomains: "true"
#       traefik.frontend.headers.STSPreload: "true"
#       traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
#       traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
#       traefik.frontend.auth.forward.address: "http://oauth:4181"
#       traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
#       traefik.frontend.auth.forward.trustForwardHeader: "true"

############################# INDEXERS

# # NZBHydra2 - NZB meta search
#   hydra:
#     image: linuxserver/hydra2
#     container_name: hydra
#     hostname: hydra
#     restart: unless-stopped
#     networks:
#       - traefik_proxy
#     ports:
#       - "${NZBHYDRA_PORT}:5076"
#     volumes:
#       - ${USERDIR}/docker/hydra2:/config
#       - ${DOWNLOAD_DIR}:/downloads
#     environment:
#       PUID: ${PUID}
#       PGID: ${PGID}
#       TZ: ${TZ}
#     labels:
#       traefik.enable: "true"
#       traefik.backend: hydra
#       traefik.protocol: http
#       traefik.port: 5076
#       traefik.frontend.rule: Host:hydra.${DOMAINNAME}
#       traefik.frontend.headers.SSLHost: hydra.${DOMAINNAME}
#       traefik.docker.network: traefik_proxy
#       traefik.frontend.passHostHeader: "true"
#       traefik.frontend.headers.SSLForceHost: "true"
#       traefik.frontend.headers.SSLRedirect: "true"
#       traefik.frontend.headers.browserXSSFilter: "true"
#       traefik.frontend.headers.contentTypeNosniff: "true"
#       traefik.frontend.headers.forceSTSHeader: "true"
#       traefik.frontend.headers.STSSeconds: 315360000
#       traefik.frontend.headers.STSIncludeSubdomains: "true"
#       traefik.frontend.headers.STSPreload: "true"
#       traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
#       traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
#       traefik.frontend.auth.forward.address: "http://oauth:4181"
#       traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
#       traefik.frontend.auth.forward.trustForwardHeader: "true"

# Jackett - Torrent Indexer
  jackett:
    image: linuxserver/jackett
    container_name: jackett
    restart: always
    networks:
      - traefik_proxy
    dns: 1.1.1.1
    ports:
      - "${JACKETT_PORT}:9117"
    volumes:
      - ${USERDIR}/docker/jackett:/config
      - ${DOWNLOAD_DIR}:/downloads
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    labels:
      traefik.enable: "true"
      traefik.backend: jackett
      traefik.protocol: http
      traefik.port: 9117
      traefik.frontend.rule: Host:jackett.${DOMAINNAME}
      traefik.frontend.headers.SSLHost: jackett.${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.headers.SSLForceHost: "true"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
      traefik.frontend.auth.forward.address: "http://oauth:4181"
      traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
      traefik.frontend.auth.forward.trustForwardHeader: "true"

############################# PVRS

# Lidarr - Music Management
  lidarr:
    image: linuxserver/lidarr
    container_name: lidarr
    hostname: lidarr
    restart: unless-stopped
    networks:
      - traefik_proxy
    ports:
      - "${LIDARR_PORT}:8686"
    volumes:
      - ${USERDIR}/docker/lidarr:/config
      - ${DOWNLOAD_DIR}:/downloads
      - ${MUSIC_DIR}:/music
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    labels:
      traefik.enable: "true"
      traefik.backend: lidarr
      traefik.protocol: http
      traefik.port: 8686
      traefik.frontend.rule: Host:lidarr.${DOMAINNAME}
      traefik.frontend.headers.SSLHost: lidarr.${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.headers.SSLForceHost: "true"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}' 
      traefik.frontend.auth.forward.address: "http://oauth:4181"
      traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
      traefik.frontend.auth.forward.trustForwardHeader: "true"

# Radarr - Movie management
  radarr:
    image: linuxserver/radarr
    container_name: radarr
    hostname: radarr
    restart: unless-stopped
    networks:
      - traefik_proxy
    ports:
      - "6789:6789"
    volumes:
      - ${USERDIR}/docker/radarr:/config
      - ${DOWNLOAD_DIR}:/downloads
      - ${MOVIES_DIR}:/movies
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    labels:
      traefik.enable: "true"
      traefik.backend: radarr
      traefik.protocol: http
      traefik.port: 6789
      traefik.frontend.rule: Host:radarr.${DOMAINNAME}
      traefik.frontend.headers.SSLHost: radarr.${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.headers.SSLForceHost: "true"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
      traefik.frontend.auth.forward.address: "http://oauth:4181"
      traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
      traefik.frontend.auth.forward.trustForwardHeader: "true"

# Sonarr - TV Shows management
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    hostname: sonarr
    restart: unless-stopped
    networks:
      - traefik_proxy
    ports:
      - "${SONARR_PORT}:8989"
    volumes:
      - ${USERDIR}/docker/sonarr:/config
      - ${DOWNLOAD_DIR}:/downloads
      - ${TV_DIR}:/TV
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    labels:
      traefik.enable: "true"
      traefik.backend: sonarr
      traefik.protocol: http
      traefik.port: 8989
      traefik.frontend.rule: Host:sonarr.${DOMAINNAME}
      traefik.frontend.headers.SSLHost: sonarr.${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.headers.SSLForceHost: "true"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
      traefik.frontend.auth.forward.address: "http://oauth:4181"
      traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
      traefik.frontend.auth.forward.trustForwardHeader: "true"

############################# MEDIA

# Ombi - Media Requests
  ombi:
    image: linuxserver/ombi
    container_name: ombi
    hostname: ombi
    restart: unless-stopped
    networks:
      - traefik_proxy
    ports:
      - "${OMBI_PORT}:3579"
    volumes:
      - ${USERDIR}/docker/ombi:/config
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    labels:
      traefik.enable: "true"
      traefik.backend: ombi
      traefik.protocol: http
      traefik.port: 3579
      traefik.frontend.rule: Host:ombi.${DOMAINNAME}
      traefik.frontend.headers.SSLHost: ombi.${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.headers.SSLForceHost: "true"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'

# Tautulli - Previously PlexPy. Plex statistics and monitoring
  tautulli:
    image: linuxserver/tautulli
    container_name: tautulli
    hostname: tautulli
    restart: unless-stopped
    networks:
      - traefik_proxy
    ports:
      - "${TAUTULLI_PORT}:8181"
    volumes:
      - ${USERDIR}/docker/tautulli/config:/config
      - ${USERDIR}/docker/tautulli/logs:/logs:ro
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    labels:
      traefik.enable: "true"
      traefik.backend: tautulli
      traefik.protocol: http
      traefik.port: 8181
      traefik.frontend.rule: Host:tautulli.${DOMAINNAME}
      traefik.frontend.headers.SSLHost: tautulli.${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.headers.SSLForceHost: "true"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'

# Plex-Sync - For Syncing watched status between plex servers 
#   plex-sync:
#     image: patsissons/plex-sync:develop
#     container_name: plex-sync
#     environment:
#       INITIAL_RUN: "true"
# #      DRY_RUN: 0
#       CRON_SCHEDULE: '*/5 * * * *'
#       SECTION_MAPS:
#     restart: unless-stopped

############################# MEDIA FILE MANAGEMENT

  mkvtoolnix:
    image: jlesage/mkvtoolnix
    container_name: mkvtoolnix
    hostname: mkvtoolnix
    restart: unless-stopped
    networks:
      - traefik_proxy
    ports:
      - ${MKVTOOLNIX_PORT}:5800
    volumes:
      - ${MEDIA_DIR}:/storage:rw
      - ${USERDIR}/docker/mkvtoolnix:/config:rw
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    labels:
      traefik.enable: "true"
      traefik.backend: mkvtoolnix
      traefik.protocol: http
      traefik.port: 5800
      traefik.frontend.rule: Host:mkvtoolnix.${DOMAINNAME}
      traefik.frontend.headers.SSLHost: mkvtoolnix.${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.headers.SSLForceHost: "true"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'

    


#  tdarr:
#    image: haveagitgat/tdarr
#    container_name: tdarr
#    hostname: tdarr
#    networks:
#      - traefik_proxy
#    environment:
#      PUID: $PUID
#      PGID: $PGID
#      TZ: $TZ
#    ports:
#      - 8265:8265
#    volumes:
#      - ${USERDIR}/docker/tdarr/data:/home/Tdarr/Documents/Tdarr
#      - ${USERDIR}/docker/tdarr/data/db:/var/lib/mongodb
#      - ${USERDIR}/NAS/media:/home/Tdarr/media
#      - ${USERDIR}/NAS/transcodes:/home/Tdarr/cache
#      - /etc/localtime:/etc/localtime:ro
#    labels:
#      traefik.enable: "true"
#      traefik.backend: tdarr
#      traefik.protocol: http
#      traefik.port: 8265
#      traefik.frontend.rule: Host:tdarr.${DOMAINNAME}
#      traefik.frontend.headers.SSLHost: tdarr.${DOMAINNAME}
#      traefik.docker.network: traefik_proxy
#      traefik.frontend.passHostHeader: "true"
#      traefik.frontend.headers.SSLForceHost: "true"
#      traefik.frontend.headers.SSLRedirect: "true"
#      traefik.frontend.headers.browserXSSFilter: "true"
#      traefik.frontend.headers.contentTypeNosniff: "true"
#      traefik.frontend.headers.forceSTSHeader: "true"
#      traefik.frontend.headers.STSSeconds: 315360000
#      traefik.frontend.headers.STSIncludeSubdomains: "true"
#      traefik.frontend.headers.STSPreload: "true"
#      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
#      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
#      traefik.frontend.auth.forward.address: "http://oauth:4181"
#      traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
#      traefik.frontend.auth.forward.trustForwardHeader: "true"

############################# UTILITIES

# not enough space currently, new hard drive use this
#   ide:
#     image: theiaide/theia-full
#     container_name: ide
#     hostname: ide
#     networks:
#       - traefik_proxy
#       - default
#     environment:
#       - PUID=${PUID}
#       - PGID=${PGID}
#       - TZ=${TZ}
# # not sure about volumes being correct
#     volumes:
#       - ${USERDIR}/docker/theia/project:/home/project:cached
#     ports:
#       - 3008:3000
#     restart: unless-stopped
#     labels:
#       traefik.enable: "true"
#       traefik.backend: ide 
#       traefik.protocol: http
#       traefik.port: 3000
#       traefik.frontend.rule: Host:ide.${DOMAINNAME}
#       traefik.frontend.headers.SSLHost: ide.${DOMAINNAME}
#       traefik.docker.network: traefik_proxy
#       traefik.frontend.passHostHeader: "true"
#       traefik.frontend.headers.SSLForceHost: "true"
#       traefik.frontend.headers.SSLRedirect: "true"
#       traefik.frontend.headers.browserXSSFilter: "true"
#       traefik.frontend.headers.contentTypeNosniff: "true"
#       traefik.frontend.headers.forceSTSHeader: "true"
#       traefik.frontend.headers.STSSeconds: 315360000
#       traefik.frontend.headers.STSIncludeSubdomains: "true"
#       traefik.frontend.headers.STSPreload: "true"
#       traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
#       traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
#       traefik.frontend.auth.forward.address: "http://oauth:4181"
#       traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
#       traefik.frontend.auth.forward.trustForwardHeader: "true"
      
  # hopefully replaced by theia full ide
  # postwoman:
  #   image: liyasthomas/postwoman:latest
  #   container_name: postwoman
  #   hostname: postwoman
  #   networks:
  #     - traefik_proxy
  #     - default
  #   environment:
  #     PUID: $PUID
  #     PGID: $PGID
  #     TZ: $TZ
  #   ports:
  #     - 3001:3000
  #   restart: unless-stopped
  #   labels:
  #     traefik.enable: "true"
  #     traefik.backend: postwoman 
  #     traefik.protocol: http
  #     traefik.port: 3000
  #     traefik.frontend.rule: Host:post.${DOMAINNAME}
  #     traefik.frontend.headers.SSLHost: post.${DOMAINNAME}
  #     traefik.docker.network: traefik_proxy
  #     traefik.frontend.passHostHeader: "true"
  #     traefik.frontend.headers.SSLForceHost: "true"
  #     traefik.frontend.headers.SSLRedirect: "true"
  #     traefik.frontend.headers.browserXSSFilter: "true"
  #     traefik.frontend.headers.contentTypeNosniff: "true"
  #     traefik.frontend.headers.forceSTSHeader: "true"
  #     traefik.frontend.headers.STSSeconds: 315360000
  #     traefik.frontend.headers.STSIncludeSubdomains: "true"
  #     traefik.frontend.headers.STSPreload: "true"
  #     traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
  #     traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
  #     traefik.frontend.auth.forward.address: "http://oauth:4181"
  #     traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
  #     traefik.frontend.auth.forward.trustForwardHeader: "true"


  freshrss:
    image: linuxserver/freshrss
    container_name: freshrss
    hostname: freshrss
    networks:
      - traefik_proxy
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
    volumes:
      - $USERDIR/docker/freshrss:/config
    ports:
      - $RSS_PORT:80
    restart: unless-stopped
    labels:
      traefik.enable: "true"
      traefik.backend: freshrss
      traefik.protocol: http
      traefik.port: 80
      traefik.frontend.rule: Host:rss.${DOMAINNAME}
      traefik.frontend.headers.SSLHost: rss.${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.headers.SSLForceHost: "true"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'

  # teedy:
  #   image: sismics/docs:v1.8
  #   container_name: teedy
  #   hostname: teedy
  #   networks:
  #     - traefik_proxy
  #   environment:
  #     PUID: $PUID
  #     PGID: $PGID
  #     TZ: $TZ
  #     DOCS_BASE_URL: https://docs.${DOMAINNAME}
  #   volumes:
  #     - $USERDIR/NAS/documents:/data
  #   ports:
  #     - $TEEDY_PORT:8080
  #   restart: unless-stopped
  #   labels:
  #     traefik.enable: "true"
  #     traefik.backend: teedy 
  #     traefik.protocol: http
  #     traefik.port: 8080 
  #     traefik.frontend.rule: Host:docs.${DOMAINNAME}
  #     traefik.frontend.headers.SSLHost: docs.${DOMAINNAME}
  #     traefik.docker.network: traefik_proxy
  #     traefik.frontend.passHostHeader: "true"
  #     traefik.frontend.headers.SSLForceHost: "true"
  #     traefik.frontend.headers.SSLRedirect: "true"
  #     traefik.frontend.headers.browserXSSFilter: "true"
  #     traefik.frontend.headers.contentTypeNosniff: "true"
  #     traefik.frontend.headers.forceSTSHeader: "true"
  #     traefik.frontend.headers.STSSeconds: 315360000
  #     traefik.frontend.headers.STSIncludeSubdomains: "true"
  #     traefik.frontend.headers.STSPreload: "true"
  #     traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
  #     traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
  #     traefik.frontend.auth.forward.address: "http://oauth:4181"
  #     traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
  #     traefik.frontend.auth.forward.trustForwardHeader: "true"


# Guacamole - Remote desktop, SSH, on Telnet on any HTML5 Browser 
# phpmyadmin create database guacamole_db
# add user guacamole_user with priviledges SELECT,INSERT,UPDATE,DELETE,CREATE
# cd ~/docker
# docker run --rm guacamole/guacamole /opt/guacamole/bin/initdb.sh --mysql > initdb.sql
# cp initdb.sql shared/
# from in /shared in mariadb container
# mysql guacamole_db -u guacamole_user -pguacamole -h mariadb < initdb.sql

# Glances - System Information
  glances:
    image: nicolargo/glances
    hostname: glances
    container_name: glances
    restart: unless-stopped
    privileged: true
#    network_mode: host
    networks:
      - traefik_proxy
    ports:
      - "${GLANCES_PORT}:61208"
    pid: host
    volumes:
      - ${USERDIR}/docker/glances:/glances/conf # Use this if you want to add a glances.conf file
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
#      GLANCES_OPT: "-C /glances/conf/glances.conf --quiet --export influxdb"
      GLANCES_OPT: "-w"
    labels:
      traefik.enable: "true"
      traefik.backend: glances
      traefik.protocol: http
      traefik.port: 61208
      traefik.frontend.rule: Host:glances.${DOMAINNAME}
      traefik.frontend.headers.SSLHost: glances.${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.headers.SSLForceHost: "true"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
      traefik.frontend.auth.forward.address: "http://oauth:4181"
      traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
      traefik.frontend.auth.forward.trustForwardHeader: "true"

############################# TESTING 

  # influxdb:
  #   image: influxdb:1.8
  #   hostname: influxdb
  #   container_name: influxdb
  #   restart: unless-stopped
  #   networks:
  #     - traefik_proxy
  #     - influxdb
  #   volumes:
  #     - ${USERDIR}/docker/influxdb/data:/var/lib/influxdb
  #     - ${USERDIR}/docker/influxdb/config/influxdb.conf:/etc/influxdb/influxdb.conf:ro
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}
  #   ports:
  #     - "8086:8086"
  #   labels:
  #     traefik.enable: "true"
  #     traefik.backend: influxdb
  #     traefik.protocol: http
  #     traefik.port: 8086
  #     traefik.frontend.rule: Host:influx.${DOMAINNAME}
  #     traefik.frontend.headers.SSLHost: influx.${DOMAINNAME}
  #     traefik.docker.network: traefik_proxy
  #     traefik.frontend.passHostHeader: "true"
  #     traefik.frontend.headers.SSLForceHost: "true"
  #     traefik.frontend.headers.SSLRedirect: "true"
  #     traefik.frontend.headers.browserXSSFilter: "true"
  #     traefik.frontend.headers.contentTypeNosniff: "true"
  #     traefik.frontend.headers.forceSTSHeader: "true"
  #     traefik.frontend.headers.STSSeconds: 315360000
  #     traefik.frontend.headers.STSIncludeSubdomains: "true"
  #     traefik.frontend.headers.STSPreload: "true"
  #     traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
  #     traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'

  # chronograf:
  #   image: chronograf:1.8
  #   hostname: chronograf
  #   container_name: chronograf
  #   restart: unless-stopped
  #   networks:
  #     - traefik_proxy
  #     - influxdb
  #   volumes:
  #     - ${USERDIR}/docker/chronograf:/var/lib/chronograf
  #   ports:
  #     - "8888:8888"
  #   depends_on:
  #     - influxdb
  #   labels:
  #     traefik.enable: "true"
  #     traefik.backend: chronograf
  #     traefik.protocol: http
  #     traefik.port: 8888
  #     traefik.frontend.rule: Host:chrono.${DOMAINNAME}
  #     traefik.frontend.headers.SSLHost: chrono.${DOMAINNAME}
  #     traefik.docker.network: traefik_proxy
  #     traefik.frontend.passHostHeader: "true"
  #     traefik.frontend.headers.SSLForceHost: "true"
  #     traefik.frontend.headers.SSLRedirect: "true"
  #     traefik.frontend.headers.browserXSSFilter: "true"
  #     traefik.frontend.headers.contentTypeNosniff: "true"
  #     traefik.frontend.headers.forceSTSHeader: "true"
  #     traefik.frontend.headers.STSSeconds: 315360000
  #     traefik.frontend.headers.STSIncludeSubdomains: "true"
  #     traefik.frontend.headers.STSPreload: "true"
  #     traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
  #     traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
  #     traefik.frontend.auth.forward.address: "http://oauth:4181"
  #     traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
  #     traefik.frontend.auth.forward.trustForwardHeader: "true"

  # mosquitto:
  #   image: eclipse-mosquitto
  #   hostname: mosquitto
  #   container_name: mosquitto
  #   restart: unless-stopped
  #   networks:
  #     - influxdb
  #     - traefik_proxy
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}
  #   volumes:
  #     - ${USERDIR}/docker/mosquitto:/mosquitto
  #   ports:
  #     - "1883:1883"
  #     - "9001:9001"
  #   labels:
  #     traefik.enable: "true"
  #     traefik.backend: mosquitto
  #     traefik.protocol: http
  #     traefik.port: 9001
  #     traefik.frontend.rule: Host:mqtt.${DOMAINNAME}
  #     traefik.frontend.headers.SSLHost: mqtt.${DOMAINNAME}
  #     traefik.docker.network: traefik_proxy
  #     traefik.frontend.passHostHeader: "true"
  #     traefik.frontend.headers.SSLForceHost: "true"
  #     traefik.frontend.headers.SSLRedirect: "true"
  #     traefik.frontend.headers.browserXSSFilter: "true"
  #     traefik.frontend.headers.contentTypeNosniff: "true"
  #     traefik.frontend.headers.forceSTSHeader: "true"
  #     traefik.frontend.headers.STSSeconds: 315360000
  #     traefik.frontend.headers.STSIncludeSubdomains: "true"
  #     traefik.frontend.headers.STSPreload: "true"
  #     traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
  #     traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'

  # telegraf:
  #   image: telegraf:1.14
  #   hostname: telegraf
  #   container_name: telegraf
  #   restart: unless-stopped
  #   networks:
  #     - traefik_proxy
  #     - influxdb
  #   volumes:
  #     - ${USERDIR}/docker/telegraf/config/telegraf.conf:/etc/telegraf/telegraf.conf:ro
  #     - /var/run/docker.sock:/var/run/docker.sock

  # kapacitor:
  #   image: kapacitor
  #   hostname: kapacitor
  #   container_name: kapacitor
  #   restart: unless-stopped
  #   networks:
  #     - influxdb
  #   volumes:
  #     - ${USERDIR}/docker/kapacitor/data:/var/lib/kapacitor
  #     - ${USERDIR}/docker/kapacitor/config/kapacitor.conf:/etc/kapacitor/kapacitor.conf:ro
  #   ports:
  #     - "9092:9092"

  # varken:
  #   image: boerderij/varken
  #   hostname: varken
  #   container_name: varken
  #   restart: unless-stopped
  #   networks:
  #     - influxdb
  #     - traefik_proxy
  #   volumes:
  #     - ${USERDIR}/docker/varken:/config
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}

  grafana:
    image: grafana/grafana:7.0.3
    hostname: grafana
    container_name: grafana
    restart: unless-stopped
    user: "1000"
    networks:
      - traefik_proxy
    volumes:
      - ${USERDIR}/docker/grafana:/var/lib/grafana
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    ports:
      - "3000:3000"
    labels:
      traefik.enable: "true"
      traefik.backend: grafana
      traefik.protocol: http
      traefik.port: 3000
      traefik.frontend.rule: Host:grafana.${DOMAINNAME}
      traefik.frontend.headers.SSLHost: grafana.${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.headers.SSLForceHost: "true"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'


############################# MAINTENANCE

# Ouroboros - Automatic Docker Container Updates
  ouroboros:
    image: pyouroboros/ouroboros
    container_name: ouroboros
    hostname: ouroboros
    restart: unless-stopped
    networks:
      - default
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      TZ: ${TZ}
      INTERVAL: 86400
      LOG_LEVEL: debug
      SELF_UPDATE: "true"
      CLEANUP: "true"
      IGNORE: traefik influxdb hassio_dns homeassistant hassio_supervisor addon_core_check_config addon_62c7908d_autobackup plexms
